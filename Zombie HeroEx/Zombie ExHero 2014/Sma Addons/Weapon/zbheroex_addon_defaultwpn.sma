/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <fakemeta>
#include <fakemeta_util>
#include <hamsandwich>
#include <cstrike>
#include <fun>
#include <zombie_theheroex>

#define PLUGIN "[ZBHeroEx] Addon: Human Weapon"
#define VERSION "1.0"
#define AUTHOR "Dias"

#define BPAMMO 8
#define MAX_BPAMMO 254

new const szPickAmmoSound[] = "items/9mmclip1.wav"
const PEV_ADDITIONAL_AMMO = pev_iuser1

// Weapon bitsums
const PRIMARY_WEAPONS_BIT_SUM = (1<<CSW_SCOUT)|(1<<CSW_XM1014)|(1<<CSW_MAC10)|(1<<CSW_AUG)|(1<<CSW_UMP45)|(1<<CSW_SG550)|(1<<CSW_GALIL)|(1<<CSW_FAMAS)|(1<<CSW_AWP)|(1<<CSW_MP5NAVY)|(1<<CSW_M249)|(1<<CSW_M3)|(1<<CSW_M4A1)|(1<<CSW_TMP)|(1<<CSW_G3SG1)|(1<<CSW_SG552)|(1<<CSW_AK47)|(1<<CSW_P90)
const SECONDARY_WEAPONS_BIT_SUM = (1<<CSW_P228)|(1<<CSW_ELITE)|(1<<CSW_FIVESEVEN)|(1<<CSW_USP)|(1<<CSW_GLOCK18)|(1<<CSW_DEAGLE)

new g_Menu_PriWpn, g_Menu_SecWpn

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	Create_Menu()
}

public plugin_precache()
{
	precache_sound(szPickAmmoSound)
}

public Create_Menu()
{
	// Primary
	g_Menu_PriWpn = menu_create("\yPrimary Weapon Select:", "priwpn_handle");
	static menu; menu = g_Menu_PriWpn
	
	menu_additem(menu, "\wM4A1", "weapon_m4a1")
	menu_additem(menu, "\wAK47", "weapon_ak47")
	menu_additem(menu, "\wSG552", "weapon_sg552")
	menu_additem(menu, "\wGALIL", "weapon_galil")
	menu_additem(menu, "\wAUG", "weapon_aug")
	menu_additem(menu, "\wM3", "weapon_m3")
	menu_additem(menu, "\wXM1014", "weapon_xm1014")
	menu_additem(menu, "\wP90", "weapon_p90")
	menu_additem(menu, "\wMP5", "weapon_mp5navy")
	
	menu_setprop(menu, MPROP_EXIT, MEXIT_ALL)
	
	// Secondary
	g_Menu_SecWpn = menu_create("\Syecondary Weapon Select:", "secwpn_handle");
	menu = g_Menu_SecWpn
	
	menu_additem(menu, "\wUSP", "weapon_usp")
	menu_additem(menu, "\wGlock-18", "weapon_glock18")
	menu_additem(menu, "\wDesert Eagle", "weapon_deagle")
	
	menu_setprop(menu, MPROP_EXIT, MEXIT_ALL)
	
	menu = 0
}

public zbheroex_user_spawned(id, Zombie)
{
	if(Zombie) return
	
	if(is_user_bot(id)) set_task(1.0, "Bot_Wpn_Select", id)
	
	//Show_PriWpn_Menu(id)
	//else 
}

public Show_PriWpn_Menu(id)
{
	menu_display(id, g_Menu_PriWpn, 0)
}

public priwpn_handle(id, menu, item)
{
	if(item == MENU_EXIT || zbheroex_get_user_zombie(id))
		return PLUGIN_HANDLED
	
	static data[64], Name[64], access, callback;
	menu_item_getinfo(menu, item, access, data, charsmax(data), Name, charsmax(Name), callback)
	
	drop_weapons(id, 1)
	give_item(id, data)
	give_player_ammo(id, data)
	
	Show_SecWpn_Menu(id)
	
	return PLUGIN_HANDLED
}

public Show_SecWpn_Menu(id)
{
	menu_display(id, g_Menu_SecWpn, 0)
}

public secwpn_handle(id, menu, item)
{
	if(item == MENU_EXIT || zbheroex_get_user_zombie(id))
		return PLUGIN_HANDLED
		
	static data[64], szName[64], access, callback;
	menu_item_getinfo(menu, item, access, data,charsmax(data), szName,charsmax(szName), callback)
	
	drop_weapons(id, 2)
	give_item(id, data)
	give_player_ammo(id, data)
	
	give_item(id, "weapon_hegrenade")
	
	return PLUGIN_HANDLED
}

public Bot_Wpn_Select(id)
{
	static WeaponName[32]
	switch(random_num(0, 3))
	{
		case 0: formatex(WeaponName, sizeof(WeaponName), "weapon_ak47")
		case 1: formatex(WeaponName, sizeof(WeaponName), "weapon_m4a1")
		case 2: formatex(WeaponName, sizeof(WeaponName), "weapon_m249")
		case 3: formatex(WeaponName, sizeof(WeaponName), "weapon_mp5navy")
	}	
	
	give_item(id, WeaponName)
	give_player_ammo(id, WeaponName)
			
	engclient_cmd(id, WeaponName)	
}

public give_player_ammo(id, classname[])
{
	static WpnID
	WpnID = get_weaponid(classname)
	
	for(new i = 0; i < BPAMMO; i++)
		give_ammo(id, WpnID)
}

public give_ammo(id, CSWID)
{
	if(!is_user_alive(id))
		return
		
	static Amount, Name[32]
		
	switch(CSWID)
	{
		case CSW_P228: {Amount = 13; formatex(Name, sizeof(Name), "357sig");}
		case CSW_SCOUT: {Amount = 30; formatex(Name, sizeof(Name), "762nato");}
		case CSW_XM1014: {Amount = 8; formatex(Name, sizeof(Name), "buckshot");}
		case CSW_MAC10: {Amount = 12; formatex(Name, sizeof(Name), "45acp");}
		case CSW_AUG: {Amount = 30; formatex(Name, sizeof(Name), "556nato");}
		case CSW_ELITE: {Amount = 30; formatex(Name, sizeof(Name), "9mm");}
		case CSW_FIVESEVEN: {Amount = 50; formatex(Name, sizeof(Name), "57mm");}
		case CSW_UMP45: {Amount = 12; formatex(Name, sizeof(Name), "45acp");}
		case CSW_SG550: {Amount = 30; formatex(Name, sizeof(Name), "556nato");}
		case CSW_GALIL: {Amount = 30; formatex(Name, sizeof(Name), "556nato");}
		case CSW_FAMAS: {Amount = 30; formatex(Name, sizeof(Name), "556nato");}
		case CSW_USP: {Amount = 12; formatex(Name, sizeof(Name), "45acp");}
		case CSW_GLOCK18: {Amount = 30; formatex(Name, sizeof(Name), "9mm");}
		case CSW_AWP: {Amount = 10; formatex(Name, sizeof(Name), "338magnum");}
		case CSW_MP5NAVY: {Amount = 30; formatex(Name, sizeof(Name), "9mm");}
		case CSW_M249: {Amount = 30; formatex(Name, sizeof(Name), "556natobox");}
		case CSW_M3: {Amount = 8; formatex(Name, sizeof(Name), "buckshot");}
		case CSW_M4A1: {Amount = 30; formatex(Name, sizeof(Name), "556nato");}
		case CSW_TMP: {Amount = 30; formatex(Name, sizeof(Name), "9mm");}
		case CSW_G3SG1: {Amount = 30; formatex(Name, sizeof(Name), "762nato");}
		case CSW_DEAGLE: {Amount = 7; formatex(Name, sizeof(Name), "50ae");}
		case CSW_SG552: {Amount = 30; formatex(Name, sizeof(Name), "556nato");}
		case CSW_AK47: {Amount = 30; formatex(Name, sizeof(Name), "762nato");}
		case CSW_P90: {Amount = 50; formatex(Name, sizeof(Name), "57mm");}
	}
	
	ExecuteHamB(Ham_GiveAmmo, id, Amount, Name, MAX_BPAMMO)
	emit_sound(id, CHAN_ITEM, szPickAmmoSound, VOL_NORM, ATTN_NORM, 0, PITCH_NORM)
}

// Drop primary/secondary weapons
stock drop_weapons(id, dropwhat)
{
	// Get user weapons
	static weapons[32], num, i, weaponid
	num = 0 // reset passed weapons count (bugfix)
	get_user_weapons(id, weapons, num)
	
	// Loop through them and drop primaries or secondaries
	for (i = 0; i < num; i++)
	{
		// Prevent re-indexing the array
		weaponid = weapons[i]
		
		if ((dropwhat == 1 && ((1<<weaponid) & PRIMARY_WEAPONS_BIT_SUM)) || (dropwhat == 2 && ((1<<weaponid) & SECONDARY_WEAPONS_BIT_SUM)))
		{
			// Get weapon entity
			static wname[32], weapon_ent
			get_weaponname(weaponid, wname, charsmax(wname))
			weapon_ent = fm_find_ent_by_owner(-1, wname, id)
			
			// Hack: store weapon bpammo on PEV_ADDITIONAL_AMMO
			set_pev(weapon_ent, PEV_ADDITIONAL_AMMO, cs_get_user_bpammo(id, weaponid))
			
			// Player drops the weapon and looses his bpammo
			engclient_cmd(id, "drop", wname)
			cs_set_user_bpammo(id, weaponid, 0)
		}
	}
}
